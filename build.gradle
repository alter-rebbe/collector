plugins {
  id 'com.github.ben-manes.versions'
  id 'idea'
  id 'java'
  id 'io.miret.etienne.sass'
}

final String opentorahVersion = '0.1.58'

description = '19 Kislev Archive'

repositories {
  jcenter()
  mavenCentral()
}

idea {
  module {
    excludeDirs += [
      file('.idea'),
      file('gradle')
    ]
  }
}

dependencies {
  runtimeOnly "org.opentorah:opentorah-collector:$opentorahVersion"
}

task generateSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ["$rootDir/docs"]
  classpath = sourceSets.main.runtimeClasspath
}

compileSass.outputDir = project.file ("${projectDir}/docs/assets")

build.dependsOn(generateSite)
build.dependsOn(compileSass)

final String gcloudServiceAccountKey = findProperty('gcloudServiceAccountKey') ?: System.getenv('gcloudServiceAccountKey')
task uploadSite(type: JavaExec) {
  main = 'org.opentorah.collector.GoogleCloudStorageSynchronizer'
  args = [gcloudServiceAccountKey, "$rootDir/docs/"]
  classpath = sourceSets.main.runtimeClasspath
}
uploadSite.dependsOn(build)

task localService(type: JavaExec) {
  main = 'org.opentorah.collector.Service'
  environment "STORE", "file://$projectDir/docs/"
  classpath = sourceSets.main.runtimeClasspath
}
localService.dependsOn(build)
