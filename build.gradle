plugins {
  id 'idea'
  id 'com.github.ben-manes.versions'
  id 'scala'
  id 'io.miret.etienne.sass'
}

idea {
  module {
    excludeDirs += [
      file('.idea'),
      file('gradle'),
      file('/by'),
      file('/collections'),
      file('/names'),
      file('/notes'),
      file('/reports'),
      file('/*.html'),
      file('gradle')
    ]
  }
}

// There is no Java in the project :)
project.gradle.startParameter.excludedTaskNames.add('compileJava')

description = '19 Kislev Archive'

repositories {
  jcenter()
  mavenCentral()

  // TODO around 2020-12-13 two packages from the second page of my Bintray listing
  // dropped off JCenter, and since the paths already exist (duh!) I can't request re-inclusion.
  // Is there some way of asking Bintray for help?
  maven {
    url 'https://dl.bintray.com/dubinsky/org.opentorah'
  }
}

dependencies {
  implementation "org.opentorah:opentorah-collector:$opentorahVersion"
  implementation "org.opentorah:opentorah-util:$opentorahVersion"

  implementation "org.scala-lang:scala-library:$scalaVersion"
  implementation "com.google.cloud:google-cloud-storage:$gcloudStorageVersion"
  compileOnly    "org.slf4j:slf4j-api:$slf4jVersion"
}

tasks.withType(ScalaCompile) {
  targetCompatibility = '1.8'
}

compileSass {
  sourceDir = project.file ("$rootDir/sass")
  outputDir = project.file ("$rootDir/assets")
}
compileSass.group = 'publishing'

final String mainClass = 'org.opentorah.collector.Main'

task verifySite(type: JavaExec) {
  main = mainClass
  args = ['verify', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
verifySite.dependsOn(classes)
verifySite.dependsOn(compileSass)
verifySite.group = 'publishing'

task generateSite(type: JavaExec) {
  main = mainClass
  args = ['generate', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
generateSite.dependsOn(classes)
generateSite.dependsOn(compileSass)
generateSite.group = 'publishing'

task buildSite(type: JavaExec) {
  main = mainClass
  args = ['build', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
buildSite.dependsOn(classes)
buildSite.dependsOn(compileSass)
buildSite.group = 'publishing'

final String gcloudServiceAccountKey = findProperty('gcloudServiceAccountKey') ?: System.getenv('gcloudServiceAccountKey') ?: "nokey"

task uploadSite(type: JavaExec) {
  main = mainClass
  args = ['upload', rootDir, gcloudServiceAccountKey]
  classpath = sourceSets.main.runtimeClasspath
}
uploadSite.dependsOn(classes)
uploadSite.dependsOn(buildSite)
uploadSite.group = 'publishing'

task uploadSiteDryRun(type: JavaExec) {
  main = mainClass
  args = ['upload', rootDir, gcloudServiceAccountKey, 'dryRun']
  classpath = sourceSets.main.runtimeClasspath
}
uploadSiteDryRun.dependsOn(classes)
uploadSiteDryRun.dependsOn(buildSite)
uploadSiteDryRun.group = 'publishing'

task serveSite(type: JavaExec) {
  main = mainClass
  args = ['serve', "file://$rootDir/"]
  classpath = sourceSets.main.runtimeClasspath
}
serveSite.dependsOn(classes)
//serveSite.dependsOn(buildSite)
serveSite.group = 'publishing'

task serveRemoteSite(type: JavaExec) {
  main = mainClass
  classpath = sourceSets.main.runtimeClasspath
}
serveRemoteSite.dependsOn(classes)
serveRemoteSite.group = 'publishing'
