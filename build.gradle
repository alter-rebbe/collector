plugins {
  id 'com.github.ben-manes.versions'
  id 'idea'
  id 'java'
  id 'io.miret.etienne.sass'
}

final String opentorahVersion = '0.1.61'

description = '19 Kislev Archive'

repositories {
  jcenter()
  mavenCentral()

  // TODO around 2020-12-13 two packages from the second page of my Bintray listing
  // dropped off JCenter, and since the paths already exist (duh!) I can't request re-inclusion.
  // Is there some way of asking Bintray for help?
  maven {
    url 'https://dl.bintray.com/dubinsky/org.opentorah'
  }
}

idea {
  module {
    excludeDirs += [
      file('.idea'),
      file('gradle'),
      file('/by'),
      file('/collections'),
      file('/names'),
      file('/notes'),
      file('/reports'),
      file('/*.html'),
      file('gradle')
    ]
  }
}

dependencies {
  runtimeOnly "org.opentorah:opentorah-collector:$opentorahVersion"
}

compileSass {
  sourceDir = project.file ("$rootDir/sass")
  outputDir = project.file ("$rootDir/assets")
}

task verifySite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['verify', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
verifySite.dependsOn(compileSass)

task generateSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['generate', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
generateSite.dependsOn(compileSass)

task buildSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['build', rootDir]
  classpath = sourceSets.main.runtimeClasspath
}
buildSite.dependsOn(compileSass)

final String gcloudServiceAccountKey = findProperty('gcloudServiceAccountKey') ?: System.getenv('gcloudServiceAccountKey') ?: "nokey"

task uploadSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['upload', rootDir, gcloudServiceAccountKey]
  classpath = sourceSets.main.runtimeClasspath
}
uploadSite.dependsOn(buildSite)

task uploadSiteDryRun(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['upload', rootDir, gcloudServiceAccountKey, 'dryRun']
  classpath = sourceSets.main.runtimeClasspath
}
uploadSite.dependsOn(buildSite)

task serveSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  args = ['serve', "file://$rootDir/"]
  classpath = sourceSets.main.runtimeClasspath
}
serveSite.dependsOn(buildSite)

task serveRemoteSite(type: JavaExec) {
  main = 'org.opentorah.collector.Main'
  classpath = sourceSets.main.runtimeClasspath
}
